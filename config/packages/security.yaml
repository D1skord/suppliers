security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/suppliers , roles: [ROLE_ADMIN, ROLE_MANAGER_BUY]}
        - { path: ^/products , roles: [ROLE_ADMIN, ROLE_MANAGER_BUY, ROLE_MANAGER_SALE]}
        - { path: ^/products/roots , roles: [ROLE_ADMIN]}
        - { path: ^/products/types , roles: [ROLE_ADMIN]}
        - { path: ^/regions , allow_if: "has_role('ROLE_ADMIN')"}
        - { path: ^/requests , roles: [ROLE_ADMIN, ROLE_MANAGER_BUY, ROLE_MANAGER_SALE]}
        - { path: ^/cart , allow_if: "has_role('ROLE_MANAGER_SALE')"}
        - { path: ^/users , allow_if: "has_role('ROLE_ADMIN')"}

